<?php
// This script and data application was generated by AppGini, https://bigprof.com/appgini
// Download AppGini for free from https://bigprof.com/appgini/download/

	include_once(__DIR__ . '/lib.php');
	@include_once(__DIR__ . '/hooks/Assignments.php');
	include_once(__DIR__ . '/Assignments_dml.php');

	// mm: can the current member access this page?
	$perm = getTablePermissions('Assignments');
	if(!$perm['access']) {
		echo error_message($Translation['tableAccessDenied']);
		exit;
	}

	$x = new DataList;
	$x->TableName = 'Assignments';

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = [
		"`Assignments`.`id`" => "id",
		"IF(    CHAR_LENGTH(`Classes1`.`Class`), CONCAT_WS('',   `Classes1`.`Class`), '') /* &#932;&#956;&#942;&#956;&#945; */" => "ClassID",
		"IF(    CHAR_LENGTH(`Lessons1`.`NameTypeHours`), CONCAT_WS('',   `Lessons1`.`NameTypeHours`), '') /* &#924;&#940;&#952;&#951;&#956;&#945;: */" => "LessonID",
		"`Assignments`.`LessonName`" => "LessonName",
		"`Assignments`.`Lesson_A_Assignment`" => "Lesson_A_Assignment",
		"`Assignments`.`Lesson_B_Assignment`" => "Lesson_B_Assignment",
		"`Assignments`.`Lesson_C_Assignment`" => "Lesson_C_Assignment",
		"`Assignments`.`LessonType`" => "LessonType",
		"`Assignments`.`LessonHours`" => "LessonHours",
		"IF(    CHAR_LENGTH(`Teachers1`.`Name_Sector`), CONCAT_WS('',   `Teachers1`.`Name_Sector`), '') /* &#917;&#954;&#960;&#945;&#953;&#948;&#949;&#965;&#964;&#953;&#954;&#972;&#962; &#913; */" => "TeacherID",
		"IF(    CHAR_LENGTH(`Teachers2`.`Name_Sector`), CONCAT_WS('',   `Teachers2`.`Name_Sector`), '') /* &#917;&#954;&#960;&#945;&#953;&#948;&#949;&#965;&#964;&#953;&#954;&#972;&#962; &#914; */" => "TeacherID2",
		"if(`Assignments`.`datetime`,date_format(`Assignments`.`datetime`,'%d-%m-%Y %H:%i'),'')" => "datetime",
	];
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = [
		1 => '`Assignments`.`id`',
		2 => '`Classes1`.`Class`',
		3 => '`Lessons1`.`NameTypeHours`',
		4 => 4,
		5 => 5,
		6 => 6,
		7 => 7,
		8 => 8,
		9 => '`Assignments`.`LessonHours`',
		10 => '`Teachers1`.`Name_Sector`',
		11 => '`Teachers2`.`Name_Sector`',
		12 => '`Assignments`.`datetime`',
	];

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = [
		"`Assignments`.`id`" => "id",
		"IF(    CHAR_LENGTH(`Classes1`.`Class`), CONCAT_WS('',   `Classes1`.`Class`), '') /* &#932;&#956;&#942;&#956;&#945; */" => "ClassID",
		"IF(    CHAR_LENGTH(`Lessons1`.`NameTypeHours`), CONCAT_WS('',   `Lessons1`.`NameTypeHours`), '') /* &#924;&#940;&#952;&#951;&#956;&#945;: */" => "LessonID",
		"`Assignments`.`LessonName`" => "LessonName",
		"`Assignments`.`Lesson_A_Assignment`" => "Lesson_A_Assignment",
		"`Assignments`.`Lesson_B_Assignment`" => "Lesson_B_Assignment",
		"`Assignments`.`Lesson_C_Assignment`" => "Lesson_C_Assignment",
		"`Assignments`.`LessonType`" => "LessonType",
		"`Assignments`.`LessonHours`" => "LessonHours",
		"IF(    CHAR_LENGTH(`Teachers1`.`Name_Sector`), CONCAT_WS('',   `Teachers1`.`Name_Sector`), '') /* &#917;&#954;&#960;&#945;&#953;&#948;&#949;&#965;&#964;&#953;&#954;&#972;&#962; &#913; */" => "TeacherID",
		"IF(    CHAR_LENGTH(`Teachers2`.`Name_Sector`), CONCAT_WS('',   `Teachers2`.`Name_Sector`), '') /* &#917;&#954;&#960;&#945;&#953;&#948;&#949;&#965;&#964;&#953;&#954;&#972;&#962; &#914; */" => "TeacherID2",
		"if(`Assignments`.`datetime`,date_format(`Assignments`.`datetime`,'%d-%m-%Y %H:%i'),'')" => "datetime",
	];
	// Fields that can be filtered
	$x->QueryFieldsFilters = [
		"`Assignments`.`id`" => "ID",
		"IF(    CHAR_LENGTH(`Classes1`.`Class`), CONCAT_WS('',   `Classes1`.`Class`), '') /* &#932;&#956;&#942;&#956;&#945; */" => "&#932;&#956;&#942;&#956;&#945;",
		"IF(    CHAR_LENGTH(`Lessons1`.`NameTypeHours`), CONCAT_WS('',   `Lessons1`.`NameTypeHours`), '') /* &#924;&#940;&#952;&#951;&#956;&#945;: */" => "&#924;&#940;&#952;&#951;&#956;&#945;:",
		"`Assignments`.`LessonName`" => "&#924;&#940;&#952;&#951;&#956;&#945;",
		"`Assignments`.`Lesson_A_Assignment`" => "&#913; &#913;&#957;&#940;&#952;&#949;&#963;&#951;",
		"`Assignments`.`Lesson_B_Assignment`" => "&#914; &#913;&#957;&#940;&#952;&#949;&#963;&#951;",
		"`Assignments`.`Lesson_C_Assignment`" => "&#915; &#913;&#957;&#940;&#952;&#949;&#963;&#951;",
		"`Assignments`.`LessonType`" => "&#920;&#949;&#969;&#961;./&#917;&#961;&#947;.",
		"`Assignments`.`LessonHours`" => "&#911;&#961;&#949;&#962;",
		"IF(    CHAR_LENGTH(`Teachers1`.`Name_Sector`), CONCAT_WS('',   `Teachers1`.`Name_Sector`), '') /* &#917;&#954;&#960;&#945;&#953;&#948;&#949;&#965;&#964;&#953;&#954;&#972;&#962; &#913; */" => "&#917;&#954;&#960;&#945;&#953;&#948;&#949;&#965;&#964;&#953;&#954;&#972;&#962; &#913;",
		"IF(    CHAR_LENGTH(`Teachers2`.`Name_Sector`), CONCAT_WS('',   `Teachers2`.`Name_Sector`), '') /* &#917;&#954;&#960;&#945;&#953;&#948;&#949;&#965;&#964;&#953;&#954;&#972;&#962; &#914; */" => "&#917;&#954;&#960;&#945;&#953;&#948;&#949;&#965;&#964;&#953;&#954;&#972;&#962; &#914;",
		"`Assignments`.`datetime`" => "&#932;&#949;&#955;&#949;&#965;&#964;&#945;&#943;&#945; &#964;&#961;&#959;&#960;&#959;&#960;&#959;&#943;&#951;&#963;&#951;",
	];

	// Fields that can be quick searched
	$x->QueryFieldsQS = [
		"`Assignments`.`id`" => "id",
		"IF(    CHAR_LENGTH(`Classes1`.`Class`), CONCAT_WS('',   `Classes1`.`Class`), '') /* &#932;&#956;&#942;&#956;&#945; */" => "ClassID",
		"IF(    CHAR_LENGTH(`Lessons1`.`NameTypeHours`), CONCAT_WS('',   `Lessons1`.`NameTypeHours`), '') /* &#924;&#940;&#952;&#951;&#956;&#945;: */" => "LessonID",
		"`Assignments`.`LessonName`" => "LessonName",
		"`Assignments`.`Lesson_A_Assignment`" => "Lesson_A_Assignment",
		"`Assignments`.`Lesson_B_Assignment`" => "Lesson_B_Assignment",
		"`Assignments`.`Lesson_C_Assignment`" => "Lesson_C_Assignment",
		"`Assignments`.`LessonType`" => "LessonType",
		"`Assignments`.`LessonHours`" => "LessonHours",
		"IF(    CHAR_LENGTH(`Teachers1`.`Name_Sector`), CONCAT_WS('',   `Teachers1`.`Name_Sector`), '') /* &#917;&#954;&#960;&#945;&#953;&#948;&#949;&#965;&#964;&#953;&#954;&#972;&#962; &#913; */" => "TeacherID",
		"IF(    CHAR_LENGTH(`Teachers2`.`Name_Sector`), CONCAT_WS('',   `Teachers2`.`Name_Sector`), '') /* &#917;&#954;&#960;&#945;&#953;&#948;&#949;&#965;&#964;&#953;&#954;&#972;&#962; &#914; */" => "TeacherID2",
		"if(`Assignments`.`datetime`,date_format(`Assignments`.`datetime`,'%d-%m-%Y %H:%i'),'')" => "datetime",
	];

	// Lookup fields that can be used as filterers
	$x->filterers = ['ClassID' => '&#932;&#956;&#942;&#956;&#945;', 'LessonID' => '&#924;&#940;&#952;&#951;&#956;&#945;:', 'TeacherID' => '&#917;&#954;&#960;&#945;&#953;&#948;&#949;&#965;&#964;&#953;&#954;&#972;&#962; &#913;', 'TeacherID2' => '&#917;&#954;&#960;&#945;&#953;&#948;&#949;&#965;&#964;&#953;&#954;&#972;&#962; &#914;', ];

	$x->QueryFrom = "`Assignments` LEFT JOIN `Classes` as Classes1 ON `Classes1`.`id`=`Assignments`.`ClassID` LEFT JOIN `Lessons` as Lessons1 ON `Lessons1`.`id`=`Assignments`.`LessonID` LEFT JOIN `Teachers` as Teachers1 ON `Teachers1`.`id`=`Assignments`.`TeacherID` LEFT JOIN `Teachers` as Teachers2 ON `Teachers2`.`id`=`Assignments`.`TeacherID2` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm['view'] == 0 ? 1 : 0);
	$x->AllowDelete = $perm['delete'];
	$x->AllowMassDelete = (getLoggedAdmin() !== false);
	$x->AllowInsert = $perm['insert'];
	$x->AllowUpdate = $perm['edit'];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = (getLoggedAdmin() !== false);
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowPrintingDV = 1;
	$x->AllowCSV = 1;
	$x->AllowAdminShowSQL = 0;
	$x->RecordsPerPage = 100;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation['quick search'];
	$x->ScriptFileName = 'Assignments_view.php';
	$x->TableTitle = '&#913;&#957;&#945;&#952;&#941;&#963;&#949;&#953;&#962;';
	$x->TableIcon = 'resources/table_icons/connect.png';
	$x->PrimaryKey = '`Assignments`.`id`';
	$x->DefaultSortField = '2';
	$x->DefaultSortDirection = 'asc';

	$x->ColWidth = [150, 150, 150, 150, 150, 150, 150, 150, 150, 150, ];
	$x->ColCaption = ['&#932;&#956;&#942;&#956;&#945;', '&#924;&#940;&#952;&#951;&#956;&#945;', '&#913; &#913;&#957;&#940;&#952;&#949;&#963;&#951;', '&#914; &#913;&#957;&#940;&#952;&#949;&#963;&#951;', '&#915; &#913;&#957;&#940;&#952;&#949;&#963;&#951;', '&#920;&#949;&#969;&#961;./&#917;&#961;&#947;.', '&#911;&#961;&#949;&#962;', '&#917;&#954;&#960;&#945;&#953;&#948;&#949;&#965;&#964;&#953;&#954;&#972;&#962; &#913;', '&#917;&#954;&#960;&#945;&#953;&#948;&#949;&#965;&#964;&#953;&#954;&#972;&#962; &#914;', '&#932;&#949;&#955;&#949;&#965;&#964;&#945;&#943;&#945; &#964;&#961;&#959;&#960;&#959;&#960;&#959;&#943;&#951;&#963;&#951;', ];
	$x->ColFieldName = ['ClassID', 'LessonName', 'Lesson_A_Assignment', 'Lesson_B_Assignment', 'Lesson_C_Assignment', 'LessonType', 'LessonHours', 'TeacherID', 'TeacherID2', 'datetime', ];
	$x->ColNumber  = [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, ];

	// template paths below are based on the app main directory
	$x->Template = 'templates/Assignments_templateTV.html';
	$x->SelectedTemplate = 'templates/Assignments_templateTVS.html';
	$x->TemplateDV = 'templates/Assignments_templateDV.html';
	$x->TemplateDVP = 'templates/Assignments_templateDVP.html';

	$x->ShowTableHeader = 1;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HasCalculatedFields = true;
	$x->AllowConsoleLog = false;
	$x->AllowDVNavigation = true;

	// hook: Assignments_init
	$render = true;
	if(function_exists('Assignments_init')) {
		$args = [];
		$render = Assignments_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// column sums
	if(strpos($x->HTML, '<!-- tv data below -->')) {
		// if printing multi-selection TV, calculate the sum only for the selected records
		$record_selector = Request::val('record_selector');
		if(Request::val('Print_x') && is_array($record_selector)) {
			$QueryWhere = '';
			foreach($record_selector as $id) {   // get selected records
				if($id != '') $QueryWhere .= "'" . makeSafe($id) . "',";
			}
			if($QueryWhere != '') {
				$QueryWhere = 'where `Assignments`.`id` in ('.substr($QueryWhere, 0, -1).')';
			} else { // if no selected records, write the where clause to return an empty result
				$QueryWhere = 'where 1=0';
			}
		} else {
			$QueryWhere = $x->QueryWhere;
		}

		$sumQuery = "SELECT SUM(`Assignments`.`LessonHours`) FROM {$x->QueryFrom} {$QueryWhere}";
		$res = sql($sumQuery, $eo);
		if($row = db_fetch_row($res)) {
			$sumRow = '<tr class="success sum">';
			if(!Request::val('Print_x')) $sumRow .= '<th class="text-center sum">&sum;</th>';
			$sumRow .= '<td class="Assignments-ClassID sum"></td>';
			$sumRow .= '<td class="Assignments-LessonName sum"></td>';
			$sumRow .= '<td class="Assignments-Lesson_A_Assignment sum"></td>';
			$sumRow .= '<td class="Assignments-Lesson_B_Assignment sum"></td>';
			$sumRow .= '<td class="Assignments-Lesson_C_Assignment sum"></td>';
			$sumRow .= '<td class="Assignments-LessonType sum"></td>';
			$sumRow .= "<td class=\"Assignments-LessonHours text-right sum locale-int\">{$row[0]}</td>";
			$sumRow .= '<td class="Assignments-TeacherID sum"></td>';
			$sumRow .= '<td class="Assignments-TeacherID2 sum"></td>';
			$sumRow .= '<td class="Assignments-datetime sum"></td>';
			$sumRow .= '</tr>';

			$x->HTML = str_replace('<!-- tv data below -->', '', $x->HTML);
			$x->HTML = str_replace('<!-- tv data above -->', $sumRow, $x->HTML);
		}
	}

	// hook: Assignments_header
	$headerCode = '';
	if(function_exists('Assignments_header')) {
		$args = [];
		$headerCode = Assignments_header($x->ContentType, getMemberInfo(), $args);
	}

	if(!$headerCode) {
		include_once(__DIR__ . '/header.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/header.php');
		echo str_replace('<%%HEADER%%>', ob_get_clean(), $headerCode);
	}

	echo $x->HTML;

	// hook: Assignments_footer
	$footerCode = '';
	if(function_exists('Assignments_footer')) {
		$args = [];
		$footerCode = Assignments_footer($x->ContentType, getMemberInfo(), $args);
	}

	if(!$footerCode) {
		include_once(__DIR__ . '/footer.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/footer.php');
		echo str_replace('<%%FOOTER%%>', ob_get_clean(), $footerCode);
	}
