<?php
// This script and data application was generated by AppGini, https://bigprof.com/appgini
// Download AppGini for free from https://bigprof.com/appgini/download/

	include_once(__DIR__ . '/lib.php');
	@include_once(__DIR__ . '/hooks/Lessons.php');
	include_once(__DIR__ . '/Lessons_dml.php');

	// mm: can the current member access this page?
	$perm = getTablePermissions('Lessons');
	if(!$perm['access']) {
		echo error_message($Translation['tableAccessDenied']);
		exit;
	}

	$x = new DataList;
	$x->TableName = 'Lessons';

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = [
		"`Lessons`.`id`" => "id",
		"`Lessons`.`Class`" => "Class",
		"`Lessons`.`Name`" => "Name",
		"`Lessons`.`Type`" => "Type",
		"`Lessons`.`Hours`" => "Hours",
		"`Lessons`.`NameTypeHours`" => "NameTypeHours",
		"`Lessons`.`A_assignment`" => "A_assignment",
		"`Lessons`.`B_assignment`" => "B_assignment",
		"`Lessons`.`C_assignment`" => "C_assignment",
		"concat('<i class=\"glyphicon glyphicon-', if(`Lessons`.`bank`, 'check', 'unchecked'), '\"></i>')" => "bank",
	];
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = [
		1 => '`Lessons`.`id`',
		2 => 2,
		3 => 3,
		4 => 4,
		5 => '`Lessons`.`Hours`',
		6 => 6,
		7 => 7,
		8 => 8,
		9 => 9,
		10 => '`Lessons`.`bank`',
	];

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = [
		"`Lessons`.`id`" => "id",
		"`Lessons`.`Class`" => "Class",
		"`Lessons`.`Name`" => "Name",
		"`Lessons`.`Type`" => "Type",
		"`Lessons`.`Hours`" => "Hours",
		"`Lessons`.`NameTypeHours`" => "NameTypeHours",
		"`Lessons`.`A_assignment`" => "A_assignment",
		"`Lessons`.`B_assignment`" => "B_assignment",
		"`Lessons`.`C_assignment`" => "C_assignment",
		"`Lessons`.`bank`" => "bank",
	];
	// Fields that can be filtered
	$x->QueryFieldsFilters = [
		"`Lessons`.`id`" => "ID",
		"`Lessons`.`Class`" => "&#932;&#940;&#958;&#951;",
		"`Lessons`.`Name`" => "&#924;&#940;&#952;&#951;&#956;&#945;",
		"`Lessons`.`Type`" => "&#920;&#949;&#969;&#961;&#943;&#945;/&#917;&#961;&#947;&#945;&#963;&#964;&#942;&#961;&#953;&#959;",
		"`Lessons`.`Hours`" => "&#911;&#961;&#949;&#962;",
		"`Lessons`.`NameTypeHours`" => "NameTypeHours",
		"`Lessons`.`A_assignment`" => "&#913; &#913;&#957;&#940;&#952;&#949;&#963;&#951;",
		"`Lessons`.`B_assignment`" => "&#914; &#913;&#957;&#940;&#952;&#949;&#963;&#951;",
		"`Lessons`.`C_assignment`" => "&#915; &#913;&#957;&#940;&#952;&#949;&#963;&#951;",
		"`Lessons`.`bank`" => "&#932;&#961;&#940;&#960;&#949;&#950;&#945; &#920;&#949;&#956;&#940;&#964;&#969;&#957;",
	];

	// Fields that can be quick searched
	$x->QueryFieldsQS = [
		"`Lessons`.`id`" => "id",
		"`Lessons`.`Class`" => "Class",
		"`Lessons`.`Name`" => "Name",
		"`Lessons`.`Type`" => "Type",
		"`Lessons`.`Hours`" => "Hours",
		"`Lessons`.`NameTypeHours`" => "NameTypeHours",
		"`Lessons`.`A_assignment`" => "A_assignment",
		"`Lessons`.`B_assignment`" => "B_assignment",
		"`Lessons`.`C_assignment`" => "C_assignment",
		"concat('<i class=\"glyphicon glyphicon-', if(`Lessons`.`bank`, 'check', 'unchecked'), '\"></i>')" => "bank",
	];

	// Lookup fields that can be used as filterers
	$x->filterers = [];

	$x->QueryFrom = "`Lessons` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm['view'] == 0 ? 1 : 0);
	$x->AllowDelete = $perm['delete'];
	$x->AllowMassDelete = (getLoggedAdmin() !== false);
	$x->AllowInsert = $perm['insert'];
	$x->AllowUpdate = $perm['edit'];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = (getLoggedAdmin() !== false);
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowPrintingDV = 1;
	$x->AllowCSV = 1;
	$x->AllowAdminShowSQL = 0;
	$x->RecordsPerPage = 100;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation['quick search'];
	$x->ScriptFileName = 'Lessons_view.php';
	$x->TableTitle = '&#924;&#945;&#952;&#942;&#956;&#945;&#964;&#945;';
	$x->TableIcon = 'resources/table_icons/books.png';
	$x->PrimaryKey = '`Lessons`.`id`';
	$x->DefaultSortField = '3';
	$x->DefaultSortDirection = 'asc';

	$x->ColWidth = [150, 150, 150, 150, 150, 150, 150, 150, ];
	$x->ColCaption = ['&#932;&#940;&#958;&#951;', '&#924;&#940;&#952;&#951;&#956;&#945;', '&#920;&#949;&#969;&#961;&#943;&#945;/&#917;&#961;&#947;&#945;&#963;&#964;&#942;&#961;&#953;&#959;', '&#911;&#961;&#949;&#962;', '&#913; &#913;&#957;&#940;&#952;&#949;&#963;&#951;', '&#914; &#913;&#957;&#940;&#952;&#949;&#963;&#951;', '&#915; &#913;&#957;&#940;&#952;&#949;&#963;&#951;', '&#932;&#961;&#940;&#960;&#949;&#950;&#945; &#920;&#949;&#956;&#940;&#964;&#969;&#957;', ];
	$x->ColFieldName = ['Class', 'Name', 'Type', 'Hours', 'A_assignment', 'B_assignment', 'C_assignment', 'bank', ];
	$x->ColNumber  = [2, 3, 4, 5, 7, 8, 9, 10, ];

	// template paths below are based on the app main directory
	$x->Template = 'templates/Lessons_templateTV.html';
	$x->SelectedTemplate = 'templates/Lessons_templateTVS.html';
	$x->TemplateDV = 'templates/Lessons_templateDV.html';
	$x->TemplateDVP = 'templates/Lessons_templateDVP.html';

	$x->ShowTableHeader = 1;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HasCalculatedFields = true;
	$x->AllowConsoleLog = false;
	$x->AllowDVNavigation = true;

	// hook: Lessons_init
	$render = true;
	if(function_exists('Lessons_init')) {
		$args = [];
		$render = Lessons_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// column sums
	if(strpos($x->HTML, '<!-- tv data below -->')) {
		// if printing multi-selection TV, calculate the sum only for the selected records
		$record_selector = Request::val('record_selector');
		if(Request::val('Print_x') && is_array($record_selector)) {
			$QueryWhere = '';
			foreach($record_selector as $id) {   // get selected records
				if($id != '') $QueryWhere .= "'" . makeSafe($id) . "',";
			}
			if($QueryWhere != '') {
				$QueryWhere = 'where `Lessons`.`id` in ('.substr($QueryWhere, 0, -1).')';
			} else { // if no selected records, write the where clause to return an empty result
				$QueryWhere = 'where 1=0';
			}
		} else {
			$QueryWhere = $x->QueryWhere;
		}

		$sumQuery = "SELECT SUM(`Lessons`.`Hours`) FROM {$x->QueryFrom} {$QueryWhere}";
		$res = sql($sumQuery, $eo);
		if($row = db_fetch_row($res)) {
			$sumRow = '<tr class="success sum">';
			if(!Request::val('Print_x')) $sumRow .= '<th class="text-center sum">&sum;</th>';
			$sumRow .= '<td class="Lessons-Class sum"></td>';
			$sumRow .= '<td class="Lessons-Name sum"></td>';
			$sumRow .= '<td class="Lessons-Type sum"></td>';
			$sumRow .= "<td class=\"Lessons-Hours text-right sum locale-int\">{$row[0]}</td>";
			$sumRow .= '<td class="Lessons-A_assignment sum"></td>';
			$sumRow .= '<td class="Lessons-B_assignment sum"></td>';
			$sumRow .= '<td class="Lessons-C_assignment sum"></td>';
			$sumRow .= '<td class="Lessons-bank sum"></td>';
			$sumRow .= '</tr>';

			$x->HTML = str_replace('<!-- tv data below -->', '', $x->HTML);
			$x->HTML = str_replace('<!-- tv data above -->', $sumRow, $x->HTML);
		}
	}

	// hook: Lessons_header
	$headerCode = '';
	if(function_exists('Lessons_header')) {
		$args = [];
		$headerCode = Lessons_header($x->ContentType, getMemberInfo(), $args);
	}

	if(!$headerCode) {
		include_once(__DIR__ . '/header.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/header.php');
		echo str_replace('<%%HEADER%%>', ob_get_clean(), $headerCode);
	}

	echo $x->HTML;

	// hook: Lessons_footer
	$footerCode = '';
	if(function_exists('Lessons_footer')) {
		$args = [];
		$footerCode = Lessons_footer($x->ContentType, getMemberInfo(), $args);
	}

	if(!$footerCode) {
		include_once(__DIR__ . '/footer.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/footer.php');
		echo str_replace('<%%FOOTER%%>', ob_get_clean(), $footerCode);
	}
